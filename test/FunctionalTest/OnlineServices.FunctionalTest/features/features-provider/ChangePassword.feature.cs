// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Bupa.OnlineServices.FunctionalTest.Features.Features_Provider
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("ChangePassword", Description="\tAs any user\r\n\tI need to change my password in order to access the online service" +
        "s\r\n\tIn order to re establish or secure the integrity of my password.", SourceFile="features\\features-provider\\ChangePassword.feature", SourceLine=0)]
    public partial class ChangePasswordFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ChangePassword.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ChangePassword", "\tAs any user\r\n\tI need to change my password in order to access the online service" +
                    "s\r\n\tIn order to re establish or secure the integrity of my password.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void SuccessfulPasswordChange(string currentpassword, string newpassword, string confirmnewpassword, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ignore",
                    "ChangePassword"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Successful password change", null, @__tags);
#line 7
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
 testRunner.Given("I am on the Change Password page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
 testRunner.And(string.Format("I enter {0} and {1} and {2}", currentpassword, newpassword, confirmnewpassword), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
 testRunner.When("I click on the Save Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 11
 testRunner.Then("You should see a message El cambio de contraseña fué exitoso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Successful password change, Bupa2222!", new string[] {
                "ChangePassword"}, SourceLine=14)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void SuccessfulPasswordChange_Bupa2222()
        {
#line 7
this.SuccessfulPasswordChange("Bupa2222!", "Bupa2018?", "Bupa2018?", ((string[])(null)));
#line hidden
        }
        
        public virtual void NewPasswordEqualsCurrentPassword(string currentpassword, string newpassword, string confirmnewpassword, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ignore",
                    "ChangePassword"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("new password equals current password", null, @__tags);
#line 18
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 19
 testRunner.Given("I have entered the password change page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 20
 testRunner.And(string.Format("I enter {0} and {1} and {2}", currentpassword, newpassword, confirmnewpassword), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
  testRunner.But("new password equals current password", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "But ");
#line 22
 testRunner.When("I click on the Save Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 23
 testRunner.Then("You should see a message La nueva contraseña no debe ser igual a la contraseña ac" +
                    "tual.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("new password equals current password, Bupa2018?", new string[] {
                "ChangePassword"}, SourceLine=26)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void NewPasswordEqualsCurrentPassword_Bupa2018()
        {
#line 18
this.NewPasswordEqualsCurrentPassword("Bupa2018?", "Bupa2018?", "Bupa2018?", ((string[])(null)));
#line hidden
        }
        
        public virtual void NewPasswordDoesNotMatchPasswordConfirmed(string currentpassword, string newpassword, string confirmnewpassword, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ignore",
                    "ChangePassword"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("New password does not match password confirmed", null, @__tags);
#line 30
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 31
 testRunner.Given("I have entered the password change page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 32
 testRunner.And(string.Format("I enter {0} and {1} and {2}", currentpassword, newpassword, confirmnewpassword), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 33
  testRunner.But("New password does not match password confirmed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "But ");
#line 34
 testRunner.Then("You should see a message Por favor revise la contraseña. La contraseña no coincid" +
                    "e.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("New password does not match password confirmed, Bupa2018?", new string[] {
                "ChangePassword"}, SourceLine=37)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void NewPasswordDoesNotMatchPasswordConfirmed_Bupa2018()
        {
#line 30
this.NewPasswordDoesNotMatchPasswordConfirmed("Bupa2018?", "Bupa2222?", "Bupa2222!", ((string[])(null)));
#line hidden
        }
        
        public virtual void TheNewPasswordDoesNotComplyWithTheFormat(string currentpassword, string newpassword, string confirmnewpassword, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ignore",
                    "ChangePassword"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The new password does not comply with the format", null, @__tags);
#line 41
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 42
 testRunner.Given("I have entered the password change page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 43
    testRunner.And(string.Format("I enter {0} and {1} and {2}", currentpassword, newpassword, confirmnewpassword), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 44
  testRunner.But("The new password does not contain a special character", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "But ");
#line 45
 testRunner.Then("You should see a message Por favor ingrese la contraseña de acuerdo a los formato" +
                    "s establecidos.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("The new password does not comply with the format, Bupa2018?", new string[] {
                "ChangePassword"}, SourceLine=48)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void TheNewPasswordDoesNotComplyWithTheFormat_Bupa2018()
        {
#line 41
this.TheNewPasswordDoesNotComplyWithTheFormat("Bupa2018?", "Bupa2018", "Bupa2018", ((string[])(null)));
#line hidden
        }
        
        public virtual void UseOfPreviousPasswords(string currentpassword, string newpassword, string confirmnewpassword, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ignore",
                    "ChangePassword"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("use of previous passwords", null, @__tags);
#line 53
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 54
 testRunner.Given("I have entered the password change page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 55
 testRunner.And(string.Format("I enter {0} and {1} and {2}", currentpassword, newpassword, confirmnewpassword), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 56
  testRunner.But("a previously used password is indicated", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "But ");
#line 57
 testRunner.When("I click on the Save Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 58
 testRunner.Then("You should see a message El cambio de contraseña fué exitoso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("use of previous passwords, Bupa2018?", new string[] {
                "ChangePassword"}, SourceLine=61)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void UseOfPreviousPasswords_Bupa2018()
        {
#line 53
this.UseOfPreviousPasswords("Bupa2018?", "Bupa2222!", "Bupa2222!", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
